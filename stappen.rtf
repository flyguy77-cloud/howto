{\rtf1\ansi\ansicpg1252\cocoartf2821
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 1. Authenticatie via SSO (Keycloak)\
\
1.1. De gebruiker opent het Self Service Portaal (Frontend).\
1.2. De frontend detecteert geen geldige sessie en redirect automatisch naar Keycloak (OIDC).\
1.3. Keycloak detecteert dat de gebruiker al is ingelogd via SSO (desktop login) en voert een silent login uit.\
1.4. De frontend ontvangt een auth code, wisselt die in voor een access token (JWT).\
1.5. Vanaf nu worden alle API-aanvragen naar de backend uitgevoerd met het token in de Authorization header.\
\
\uc0\u11835 \
\
2. Aanmaken van een workflow\
\
2.1. De gebruiker maakt een workflow in de canvas UI door taken te slepen (bijv. \'93haal data op\'94, \'93voer script uit\'94).\
2.2. De frontend stuurt de workflowdefinitie (als JSON) naar de backend API.\
\
\uc0\u11835 \
\
3. Opslaan en valideren van de workflow\
\
3.1. De backend valideert de structuur van de workflow en controleert of de gebruikte taaktypes bestaan.\
3.2. De workflow wordt opgeslagen in de metadatadatabase (workflows, tasks).\
3.3. Eventueel controleert de backend of gekoppelde scripts/BHK-verwijzingen geldig zijn (bijv. bestaan in GitLab).\
\
\uc0\u11835 \
\
4. Starten van de workflow\
\
4.1 Handmatig starten\
\
4.1.1. De gebruiker klikt op \'93Start workflow\'94 in de frontend.\
4.1.2. De frontend stuurt een startverzoek naar de backend.\
4.1.3. De backend roept de Workflow Engine aan om de uitvoering te starten.\
\
4.2 Geplande start\
\
4.2.1. De gebruiker stelt een schema in via de frontend (bijv. dagelijks om 08:00).\
4.2.2. De backend slaat dit op in de database (scheduled_jobs).\
4.2.3. De scheduler controleert periodiek op geplande workflows en start ze via de engine zodra het tijd is.\
\
\uc0\u11835 \
\
5. Uitvoering door de Workflow Engine\
\
5.1. De engine laadt de workflowdefinitie uit de database.\
5.2. Bepaalt de eerste taak en parameters.\
5.3. Zet een bericht in de task queue (Kafka, RabbitMQ) met workflow-ID, taaktype en parameters.\
\
\uc0\u11835 \
\
6. Verwerking door een worker\
\
6.1. Een beschikbare worker leest de taak uit de queue.\
6.2. De taak wordt uitgevoerd op basis van type:\
	\'95	Data-ophaaltaak \uc0\u8594  BHK API\
	\'95	Script-taak \uc0\u8594  script ophalen uit GitLab, uitvoeren via Script Executor\
	\'95	Rapport-taak \uc0\u8594  rapport genereren en opslaan in DMS\
6.3. De worker stuurt de status (success/fail), uitvoer en logs terug naar de engine.\
6.4. De engine logt dit in de database (task_logs, workflow_runs).\
\
\uc0\u11835 \
\
7. Engine verwerkt vervolgstappen\
\
7.1. De engine controleert of er vervolgtaken zijn in de workflow.\
7.2. Zo ja: plaats de volgende taak terug in de queue (en herhaal stap 6).\
7.3. Zo nee: markeer de workflow als voltooid.\
\
\uc0\u11835 \
\
8. Status & Rapportage\
\
8.1. De frontend toont live status van de workflow via polling of websockets.\
8.2. Indien toegestaan, kan de gebruiker het eindrapport downloaden via de backend die het document uit de DMS ophaalt.\
\
\uc0\u11835 \
\
 Foutafhandeling per blok\
\
\uc0\u11835 \
\
Authenticatie\
	\'95	Token verlopen \uc0\u8594  frontend redirect naar Keycloak\
	\'95	Token niet geldig \uc0\u8594  backend retourneert 401 Unauthorized\
	\'95	OIDC flow mislukt \uc0\u8594  login opnieuw starten\
\
\uc0\u11835 \
\
 Workflow validatie\
	\'95	Ongeldige JSON \uc0\u8594  400 Bad Request\
	\'95	Onbekend taaktype \uc0\u8594  422 Unprocessable Entity\
	\'95	Script-ID niet vindbaar in GitLab \uc0\u8594  foutmelding in frontend\
\
\uc0\u11835 \
\
 Starten workflow\
	\'95	Workflow niet gevonden \uc0\u8594  404\
	\'95	Geen rechten op workflow \uc0\u8594  403\
	\'95	Engine niet bereikbaar \uc0\u8594  503 Service Unavailable\
\
\uc0\u11835 \
\
 Task queue en worker\
	\'95	Queue down \uc0\u8594  retry + alert\
	\'95	Worker crasht \uc0\u8594  task opnieuw inplannen (exponenti\'eble backoff)\
	\'95	Script faalt \uc0\u8594  task status = failed, log in task_logs\
\
\uc0\u11835 \
\
 Rapport ophalen\
	\'95	Rapport ontbreekt in DMS \uc0\u8594  foutmelding bij download\
	\'95	Compliance restricties \uc0\u8594  toegang geblokkeerd, 403 Forbidden\
}